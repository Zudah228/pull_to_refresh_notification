// GENERATED CODE - DO NOT MODIFY MANUALLY
// **************************************************************************
// Auto generated by https://github.com/fluttercandies/ff_annotation_route
// **************************************************************************
// ignore_for_file: prefer_const_literals_to_create_immutables,unused_local_variable,unused_import
import 'package:ff_annotation_route_library/ff_annotation_route_library.dart';
import 'package:flutter/widgets.dart';

import 'pages/complex/pull_to_refresh_candies.dart';
import 'pages/complex/pull_to_refresh_chat.dart';
import 'pages/complex/pull_to_refresh_header.dart';
import 'pages/main_page.dart';
import 'pages/simple/pull_to_refresh_appbar.dart';
import 'pages/simple/pull_to_refresh_image.dart';

FFRouteSettings getRouteSettings({
  required String name,
  Map<String, dynamic>? arguments,
  PageBuilder? notFoundPageBuilder,
}) {
  final Map<String, dynamic> safeArguments =
      arguments ?? const <String, dynamic>{};
  switch (name) {
    case 'fluttercandies://PullToRefreshAppbar':
      return FFRouteSettings(
        name: name,
        arguments: arguments,
        builder: () => PullToRefreshAppbar(),
        routeName: 'PullToRefreshAppbar',
        description:
            'Show how to use pull to refresh notification to build a pull refresh appbar',
        exts: <String, dynamic>{'group': 'Simple', 'order': 0},
      );
    case 'fluttercandies://PullToRefreshCandies':
      return FFRouteSettings(
        name: name,
        arguments: arguments,
        builder: () => PullToRefreshCandies(),
        routeName: 'PullToRefreshCandies',
        description:
            'Show how to use pull to refresh notification to build a pull candies animation',
        exts: <String, dynamic>{'group': 'Complex', 'order': 1},
      );
    case 'fluttercandies://PullToRefreshChat':
      return FFRouteSettings(
        name: name,
        arguments: arguments,
        builder: () => PullToRefreshChat(),
        routeName: 'PullToRefreshChat',
        description:
            'Show how to use pull to refresh notification for reverse list like chat list.',
        exts: <String, dynamic>{'group': 'Complex', 'order': 2},
      );
    case 'fluttercandies://PullToRefreshHeader':
      return FFRouteSettings(
        name: name,
        arguments: arguments,
        builder: () => PullToRefreshHeader(),
        routeName: 'PullToRefreshHeader',
        description:
            'Show how to use pull to refresh notification to build a pull refresh header,and hide it on refresh done',
        exts: <String, dynamic>{'group': 'Complex', 'order': 0},
      );
    case 'fluttercandies://PullToRefreshImage':
      return FFRouteSettings(
        name: name,
        arguments: arguments,
        builder: () => PullToRefreshImage(),
        routeName: 'PullToRefreshImage',
        description:
            'Show how to use pull to refresh notification to build a pull refresh image',
        exts: <String, dynamic>{'group': 'Simple', 'order': 1},
      );
    case 'fluttercandies://demogrouppage':
      return FFRouteSettings(
        name: name,
        arguments: arguments,
        builder: () => DemoGroupPage(
          keyValue: asT<MapEntry<String, List<DemoRouteResult>>>(
            safeArguments['keyValue'],
          )!,
        ),
        routeName: 'DemoGroupPage',
      );
    case 'fluttercandies://mainpage':
      return FFRouteSettings(
        name: name,
        arguments: arguments,
        builder: () => MainPage(),
        routeName: 'MainPage',
      );
    default:
      return FFRouteSettings(
        name: FFRoute.notFoundName,
        routeName: FFRoute.notFoundRouteName,
        builder: notFoundPageBuilder ?? () => Container(),
      );
  }
}
